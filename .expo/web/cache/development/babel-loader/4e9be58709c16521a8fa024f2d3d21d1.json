{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/Rohan/Documents/GitHub/newNebulaRepository/screens/Searchscreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { SearchBar } from 'react-native-elements';\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nvar DATA = [{\n  id: 'bd7acbea-c1b1-46c2-aed5-3ad53abb28ba',\n  title: 'First Item'\n}, {\n  id: '3ac68afc-c605-48d3-a4f8-fbd91aa97f63',\n  title: 'Second Item'\n}, {\n  id: '58694a0f-3da1-471f-bd96-145571e29d72',\n  title: 'Third Item'\n}];\n\nvar Searchscreen = function (_Component) {\n  _inherits(Searchscreen, _Component);\n\n  var _super = _createSuper(Searchscreen);\n\n  function Searchscreen() {\n    var _this;\n\n    _classCallCheck(this, Searchscreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      filteredList: [],\n      search: ''\n    };\n\n    _this.updateSearch = function (search) {\n      _this.setState({\n        search: search\n      });\n    };\n\n    _this.Item = function (item) {\n      return React.createElement(View, {\n        style: {\n          height: 50,\n          width: 200,\n          backgroundColor: '#6e3b6e'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 7\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Searchscreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var search = this.state.search;\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          padding: 10,\n          backgroundColor: 'gray'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 7\n        }\n      }, React.createElement(SearchBar, {\n        placeholder: \"Type Here...\",\n        onChangeText: this.updateSearch,\n        value: search,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 71\n        }\n      }), \"     \", React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 14\n        }\n      }, \" \", React.createElement(FlatList, {\n        data: DATA,\n        renderItem: function renderItem(item) {\n          return _this2.Item(item);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return Searchscreen;\n}(Component);\n\nexport { Searchscreen as default };","map":{"version":3,"sources":["/Users/Rohan/Documents/GitHub/newNebulaRepository/screens/Searchscreen.js"],"names":["SearchBar","React","Component","DATA","id","title","Searchscreen","state","filteredList","search","updateSearch","setState","Item","item","height","width","backgroundColor","flex","padding"],"mappings":";;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,uBAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;AAEA,IAAMC,IAAI,GAAG,CACX;AACEC,EAAAA,EAAE,EAAE,sCADN;AAEEC,EAAAA,KAAK,EAAE;AAFT,CADW,EAKX;AACED,EAAAA,EAAE,EAAE,sCADN;AAEEC,EAAAA,KAAK,EAAE;AAFT,CALW,EASX;AACED,EAAAA,EAAE,EAAE,sCADN;AAEEC,EAAAA,KAAK,EAAE;AAFT,CATW,CAAb;;IAeqBC,Y;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNC,MAAAA,YAAY,EAAE,EADR;AAENC,MAAAA,MAAM,EAAE;AAFF,K;;UAKRC,Y,GAAe,UAAAD,MAAM,EAAI;AACvB,YAAKE,QAAL,CAAc;AAAEF,QAAAA,MAAM,EAANA;AAAF,OAAd;AACD,K;;UAkBDG,I,GAAO,UAACC,IAAD,EAAU;AACf,aACE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,MAAM,EAAE,EADH;AACOC,UAAAA,KAAK,EAAE,GADd;AAELC,UAAAA,eAAe,EAAE;AAFZ,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AASD,K;;;;;;;6BA1BQ;AAAA;;AAAA,UACCP,MADD,GACY,KAAKF,KADjB,CACCE,MADD;AAGP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEQ,UAAAA,IAAI,EAAE,CAAR;AAAWC,UAAAA,OAAO,EAAE,EAApB;AAAwBF,UAAAA,eAAe,EAAE;AAAzC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgE,oBAAC,SAAD;AAC9D,QAAA,WAAW,EAAC,cADkD;AAE9D,QAAA,YAAY,EAAE,KAAKN,YAF2C;AAG9D,QAAA,KAAK,EAAED,MAHuD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhE,WAIO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAO,oBAAC,QAAD;AACZ,QAAA,IAAI,EAAEN,IADM;AAEZ,QAAA,UAAU,EAAE,oBAACU,IAAD,EAAU;AAAE,iBAAO,MAAI,CAACD,IAAL,CAAUC,IAAV,CAAP;AAAwB,SAFpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP,CAJP,CADF;AAYD;;;;EAzBuCX,S;;SAArBI,Y","sourcesContent":["import { SearchBar } from 'react-native-elements';\nimport React, { Component } from \"react\";\nimport { View, FlatList, Text, TouchableOpacity } from \"react-native\"\nconst DATA = [\n  {\n    id: 'bd7acbea-c1b1-46c2-aed5-3ad53abb28ba',\n    title: 'First Item',\n  },\n  {\n    id: '3ac68afc-c605-48d3-a4f8-fbd91aa97f63',\n    title: 'Second Item',\n  },\n  {\n    id: '58694a0f-3da1-471f-bd96-145571e29d72',\n    title: 'Third Item',\n  },\n];\n\nexport default class Searchscreen extends Component {\n  state = {\n    filteredList: [],\n    search: '',\n  };\n\n  updateSearch = search => {\n    this.setState({ search });\n  };\n\n  render() {\n    const { search } = this.state;\n\n    return (\n      <View style={{ flex: 1, padding: 10, backgroundColor: 'gray' }}><SearchBar\n        placeholder=\"Type Here...\"\n        onChangeText={this.updateSearch}\n        value={search}\n      />     <View> <FlatList\n        data={DATA}\n        renderItem={(item) => { return this.Item(item) }}\n      /></View>\n      </View>\n\n    );\n  }\n  Item = (item) => {\n    return (\n      <View\n        style={{\n          height: 50, width: 200,\n          backgroundColor: '#6e3b6e',\n        }}\n      >\n      </View >\n    );\n  }\n\n}"]},"metadata":{},"sourceType":"module"}