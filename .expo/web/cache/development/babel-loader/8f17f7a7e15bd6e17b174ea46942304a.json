{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/Rohan/Documents/GitHub/newNebulaRepository/screens/Searchscreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { SearchBar } from 'react-native-elements';\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      search: ''\n    };\n\n    _this.updateSearch = function (search) {\n      _this.setState({\n        search: search\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var search = this.state.search;\n      return React.createElement(SearchBar, {\n        placeholder: \"Type Here...\",\n        onChangeText: this.updateSearch,\n        value: search,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };","map":{"version":3,"sources":["/Users/Rohan/Documents/GitHub/newNebulaRepository/screens/Searchscreen.js"],"names":["SearchBar","App","state","search","updateSearch","setState","Component"],"mappings":";;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,uBAA1B;;IAEqBC,G;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNC,MAAAA,MAAM,EAAE;AADF,K;;UAIRC,Y,GAAe,UAAAD,MAAM,EAAI;AACvB,YAAKE,QAAL,CAAc;AAAEF,QAAAA,MAAM,EAANA;AAAF,OAAd;AACD,K;;;;;;;6BAEQ;AAAA,UACCA,MADD,GACY,KAAKD,KADjB,CACCC,MADD;AAGP,aACE,oBAAC,SAAD;AACE,QAAA,WAAW,EAAC,cADd;AAEE,QAAA,YAAY,EAAE,KAAKC,YAFrB;AAGE,QAAA,KAAK,EAAED,MAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAOD;;;;EAnB8BG,S;;SAAZL,G","sourcesContent":["import { SearchBar } from 'react-native-elements';\n\nexport default class App extends Component {\n  state = {\n    search: '',\n  };\n\n  updateSearch = search => {\n    this.setState({ search });\n  };\n\n  render() {\n    const { search } = this.state;\n\n    return (\n      <SearchBar\n        placeholder=\"Type Here...\"\n        onChangeText={this.updateSearch}\n        value={search}\n      />\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}