{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/Rohan/Documents/GitHub/newNebulaRepository/App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { Router, Scene, Drawer } from \"react-native-router-flux\";\nimport CategoriesScreens from \"./screens/CategoriesScreens\";\nimport LumbarConditions from \"./screens/ConditionsPages/LumbarConditions\";\nimport AnkleConditions from \"./screens/ConditionsPages/AnkleConditions\";\nimport KneeConditions from \"./screens/ConditionsPages/KneeConditions\";\nimport ShoulderConditions from \"./screens/ConditionsPages/ShoulderConditions\";\nimport SpineConditions from \"./screens/ConditionsPages/SpineConditions\";\nimport WristHandConditions from \"./screens/ConditionsPages/WristHandConditions\";\nimport DrawerContent from \"./screens/DrawerContent\";\nimport Login from \"./screens/Login/Login\";\nimport LoginForm from \"./screens/Login/LoginForm\";\nimport Register from \"./screens/Login/Register\";\nimport RegisterForm from \"./screens/Login/RegisterForm\";\nimport Welcome from \"./screens/Login/Welcome\";\nimport { setCommonConditions } from \"./database/CommonConditions\";\nimport Search from \"./screens/Searchscreen\";\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isLoaded: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      (function _callee() {\n        var isInitialized;\n        return _regeneratorRuntime.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _regeneratorRuntime.awrap(setCommonConditions());\n\n              case 2:\n                isInitialized = _context.sent;\n\n                _this2.setState({\n                  isLoaded: true\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      })();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.isLoaded) {\n        return React.createElement(Router, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 9\n          }\n        }, React.createElement(Drawer, {\n          key: \"drawer\",\n          drawer: true,\n          contentComponent: DrawerContent,\n          drawerWidth: 220,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 11\n          }\n        }, React.createElement(Scene, {\n          key: \"root\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }\n        }, React.createElement(Scene, {\n          key: \"CategoriesScreens\",\n          component: CategoriesScreens,\n          drawer: false,\n          initial: true,\n          title: \"Most Common Conditions\",\n          headerMode: \"screen\",\n          labelStyle: {\n            color: \"black\",\n            fontSize: 18\n          },\n          titleStyle: {\n            color: \"black\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }\n        }), React.createElement(Scene, {\n          key: \"LumbarConditions\",\n          component: LumbarConditions,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }\n        }), React.createElement(Scene, {\n          key: \"AnkleConditions\",\n          component: AnkleConditions,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }\n        }), React.createElement(Scene, {\n          key: \"KneeConditions\",\n          component: KneeConditions,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }\n        }), React.createElement(Scene, {\n          key: \"ShoulderConditions\",\n          component: ShoulderConditions,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }\n        }), React.createElement(Scene, {\n          key: \"SpineConditions\",\n          component: SpineConditions,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }\n        }), React.createElement(Scene, {\n          key: \"WristHandConditions\",\n          component: WristHandConditions,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }\n        }), React.createElement(Scene, {\n          key: \"Login\",\n          component: Login,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }\n        }), React.createElement(Scene, {\n          key: \"Welcome\",\n          component: Welcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }\n        }), React.createElement(Scene, {\n          key: \"Register\",\n          component: Register,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }\n        }))));\n      } else {\n        return null;\n      }\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };","map":{"version":3,"sources":["/Users/Rohan/Documents/GitHub/newNebulaRepository/App.js"],"names":["React","Component","Router","Scene","Drawer","CategoriesScreens","LumbarConditions","AnkleConditions","KneeConditions","ShoulderConditions","SpineConditions","WristHandConditions","DrawerContent","Login","LoginForm","Register","RegisterForm","Welcome","setCommonConditions","Search","App","props","state","isLoaded","isInitialized","setState","color","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Router, Scene, Drawer } from \"react-native-router-flux\";\n\nimport CategoriesScreens from \"./screens/CategoriesScreens\";\nimport LumbarConditions from \"./screens/ConditionsPages/LumbarConditions\";\nimport AnkleConditions from \"./screens/ConditionsPages/AnkleConditions\";\nimport KneeConditions from \"./screens/ConditionsPages/KneeConditions\";\nimport ShoulderConditions from \"./screens/ConditionsPages/ShoulderConditions\";\nimport SpineConditions from \"./screens/ConditionsPages/SpineConditions\";\nimport WristHandConditions from \"./screens/ConditionsPages/WristHandConditions\";\nimport DrawerContent from \"./screens/DrawerContent\";\nimport Login from \"./screens/Login/Login\";\nimport LoginForm from \"./screens/Login/LoginForm\";\nimport Register from \"./screens/Login/Register\";\nimport RegisterForm from \"./screens/Login/RegisterForm\";\nimport Welcome from \"./screens/Login/Welcome\";\nimport { setCommonConditions } from \"./database/CommonConditions\";\nimport Search from \"./screens/Searchscreen\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n    };\n  }\n  componentDidMount() {\n    (async () => {\n      let isInitialized = await setCommonConditions();\n      this.setState({ isLoaded: true });\n    })();\n  }\n\n  render() {\n    if (this.state.isLoaded) {\n      return (\n        <Router>\n          <Drawer\n            key=\"drawer\"\n            drawer\n            contentComponent={DrawerContent}\n            drawerWidth={220}\n          >\n            <Scene key=\"root\">\n              <Scene\n                key=\"CategoriesScreens\"\n                component={CategoriesScreens}\n                drawer={false}\n                initial\n                title=\"Most Common Conditions\"\n                headerMode=\"screen\"\n                labelStyle={{ color: \"black\", fontSize: 18 }}\n                titleStyle={{ color: \"black\" }}\n              />\n              <Scene key=\"LumbarConditions\" component={LumbarConditions} />\n              <Scene key=\"AnkleConditions\" component={AnkleConditions} />\n              <Scene key=\"KneeConditions\" component={KneeConditions} />\n              <Scene key=\"ShoulderConditions\" component={ShoulderConditions} />\n              <Scene key=\"SpineConditions\" component={SpineConditions} />\n              <Scene\n                key=\"WristHandConditions\"\n                component={WristHandConditions}\n              />\n              <Scene key=\"Login\" component={Login} />\n              <Scene key=\"Welcome\" component={Welcome} />\n              <Scene key=\"Register\" component={Register} />\n            </Scene>\n          </Drawer>\n        </Router>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}